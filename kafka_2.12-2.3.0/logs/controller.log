[2020-04-14 11:01:31,320] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 11:01:31,321] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 11:01:31,321] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 11:01:31,322] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2020-04-14 11:01:31,323] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2020-04-14 11:01:31,324] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-04-14 11:01:31,325] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-04-14 11:01:31,327] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2020-04-14 11:03:29,815] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-14 11:03:39,677] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 11:03:39,695] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-04-14 11:03:39,696] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-14 11:03:39,698] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-14 11:03:39,701] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-14 11:03:39,702] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-14 11:03:39,723] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2020-04-14 11:03:39,726] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-14 11:03:39,729] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-14 11:03:39,739] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-14 11:03:39,740] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-04-14 11:03:39,741] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-14 11:03:39,741] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-14 11:03:39,741] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-14 11:03:39,741] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-14 11:03:39,744] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-14 11:03:39,744] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-14 11:03:39,744] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-14 11:03:39,744] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-14 11:03:39,745] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-14 11:03:39,752] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-14 11:03:39,753] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-14 11:03:39,756] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-14 11:03:39,757] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-14 11:03:39,757] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-14 11:03:39,757] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-14 11:03:39,757] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9090 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 11:03:39,760] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-14 11:03:39,760] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-14 11:03:39,761] INFO [Controller id=0] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2020-04-14 11:03:39,761] INFO [Controller id=0] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2020-04-14 11:03:39,764] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-14 11:03:39,764] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-14 11:03:39,764] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-14 11:03:39,764] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-14 11:03:39,764] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-04-14 11:03:39,788] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-14 11:03:42,482] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-04-14 11:03:42,483] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-14 11:03:42,487] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-14 11:03:42,488] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-04-14 11:03:42,490] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 11:03:42,493] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-04-14 11:03:42,494] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43) (kafka.controller.KafkaController)
[2020-04-14 11:03:42,518] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 11:03:42,525] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-14 11:03:44,790] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-14 11:03:44,791] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 11:03:44,795] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-14 11:03:47,312] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-04-14 11:03:47,312] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-14 11:03:47,315] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-14 11:03:47,315] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-04-14 11:03:47,316] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-04-14 11:03:47,316] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 11:03:47,317] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43, 2 -> 59) (kafka.controller.KafkaController)
[2020-04-14 11:03:47,361] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 11:03:47,370] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-14 11:03:52,481] INFO [Controller id=0] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2020-04-14 11:03:52,481] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2020-04-14 11:03:52,484] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-14 11:03:52,484] INFO [Controller id=0] New broker startup callback for 3 (kafka.controller.KafkaController)
[2020-04-14 11:03:52,485] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(3) (kafka.controller.KafkaController)
[2020-04-14 11:03:52,486] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 11:03:52,488] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43, 2 -> 59, 3 -> 75) (kafka.controller.KafkaController)
[2020-04-14 11:03:52,527] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 11:03:52,535] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-14 11:03:57,879] INFO [Controller id=0] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2020-04-14 11:03:57,879] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2020-04-14 11:03:57,881] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-14 11:03:57,882] INFO [Controller id=0] New broker startup callback for 4 (kafka.controller.KafkaController)
[2020-04-14 11:03:57,886] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(4) (kafka.controller.KafkaController)
[2020-04-14 11:03:57,887] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9094 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 11:03:57,887] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43, 2 -> 59, 3 -> 75, 4 -> 91) (kafka.controller.KafkaController)
[2020-04-14 11:03:57,920] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-14 11:03:57,928] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-14 11:04:20,733] INFO [Controller id=0] New topics: [Set(test-part-1-rep-5)], deleted topics: [Set()], new partition replica assignment [Map(test-part-1-rep-5-0 -> Vector(1, 0, 2, 3, 4))] (kafka.controller.KafkaController)
[2020-04-14 11:04:20,733] INFO [Controller id=0] New partition creation callback for test-part-1-rep-5-0 (kafka.controller.KafkaController)
[2020-04-14 11:05:04,764] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-1-rep-5-0) (kafka.controller.KafkaController)
[2020-04-14 11:05:10,236] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-1-rep-5-0) (kafka.controller.KafkaController)
[2020-04-14 11:08:44,795] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-14 11:08:44,796] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 11:08:44,797] DEBUG [Controller id=0] Preferred replicas by broker Map(1 -> Map(test-part-1-rep-5-0 -> Vector(1, 0, 2, 3, 4))) (kafka.controller.KafkaController)
[2020-04-14 11:08:44,802] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-14 11:08:44,805] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:12:30,057] DEBUG [Controller id=0] Delete topics listener fired for topics test-part-1-rep-5 to be deleted (kafka.controller.KafkaController)
[2020-04-14 11:12:30,058] INFO [Controller id=0] Starting topic deletion for topics test-part-1-rep-5 (kafka.controller.KafkaController)
[2020-04-14 11:12:30,060] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:30,066] INFO [Topic Deletion Manager 0] Deletion of topic test-part-1-rep-5 (re)started (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:30,066] INFO [Topic Deletion Manager 0] Topic deletion callback for test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:30,079] INFO [Topic Deletion Manager 0] Partition deletion callback for test-part-1-rep-5-0 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:30,288] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:12:30,290] DEBUG The stop replica request (delete = false) sent to broker 4 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=4],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:12:30,290] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:12:30,290] DEBUG The stop replica request (delete = false) sent to broker 3 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=3],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:12:30,291] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:12:30,292] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=0],[Topic=test-part-1-rep-5,Partition=0,Replica=3],[Topic=test-part-1-rep-5,Partition=0,Replica=1],[Topic=test-part-1-rep-5,Partition=0,Replica=4],[Topic=test-part-1-rep-5,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:30,300] DEBUG The stop replica request (delete = true) sent to broker 2 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=2],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:12:30,306] DEBUG The stop replica request (delete = true) sent to broker 4 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=4],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:12:30,306] DEBUG The stop replica request (delete = true) sent to broker 1 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=1],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:12:30,307] DEBUG The stop replica request (delete = true) sent to broker 3 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=3],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:12:30,307] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:12:32,265] INFO [Controller id=0] New topics: [Set(test-part-2-rep-5)], deleted topics: [Set()], new partition replica assignment [Map(test-part-2-rep-5-1 -> Vector(0, 4, 1, 2, 3), test-part-2-rep-5-0 -> Vector(4, 3, 0, 1, 2))] (kafka.controller.KafkaController)
[2020-04-14 11:12:32,265] INFO [Controller id=0] New partition creation callback for test-part-2-rep-5-1,test-part-2-rep-5-0 (kafka.controller.KafkaController)
[2020-04-14 11:12:35,055] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(test-part-1-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-14 11:12:35,060] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:35,064] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:35,071] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = Map(test-part-1-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-14 11:12:35,072] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=4] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:35,073] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:38,030] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(test-part-1-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-14 11:12:38,031] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:38,031] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:38,062] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(test-part-1-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-14 11:12:38,062] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:38,062] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:38,063] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(test-part-1-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-14 11:12:38,063] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:38,063] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:46,815] INFO [Topic Deletion Manager 0] Deletion of topic test-part-1-rep-5 successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-14 11:12:46,819] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-14 11:12:46,820] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-14 11:12:57,116] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-2-rep-5-1) (kafka.controller.KafkaController)
[2020-04-14 11:12:57,830] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-2-rep-5-0) (kafka.controller.KafkaController)
[2020-04-14 11:13:05,464] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-2-rep-5-0) (kafka.controller.KafkaController)
[2020-04-14 11:13:50,526] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-2-rep-5-0, test-part-2-rep-5-0, test-part-2-rep-5-1, test-part-2-rep-5-0, test-part-2-rep-5-0, test-part-2-rep-5-1, test-part-2-rep-5-1, test-part-2-rep-5-1, test-part-2-rep-5-0) (kafka.controller.KafkaController)
[2020-04-14 11:13:54,793] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-14 11:13:54,793] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 11:13:54,793] DEBUG [Controller id=0] Preferred replicas by broker Map(4 -> Map(test-part-2-rep-5-0 -> Vector(4, 3, 0, 1, 2)), 0 -> Map(test-part-2-rep-5-1 -> Vector(0, 4, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-14 11:13:54,793] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-14 11:13:54,794] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:13:54,794] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 11:13:54,794] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:13:54,795] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-2-rep-5-1, test-part-2-rep-5-0) (kafka.controller.KafkaController)
[2020-04-14 11:18:54,794] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-14 11:18:54,794] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 11:18:54,794] DEBUG [Controller id=0] Preferred replicas by broker Map(4 -> Map(test-part-2-rep-5-0 -> Vector(4, 3, 0, 1, 2)), 0 -> Map(test-part-2-rep-5-1 -> Vector(0, 4, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-14 11:18:54,794] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-14 11:18:54,794] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:18:54,794] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 11:18:54,794] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:23:44,438] DEBUG [Controller id=0] Delete topics listener fired for topics test-part-2-rep-5 to be deleted (kafka.controller.KafkaController)
[2020-04-14 11:23:44,439] INFO [Controller id=0] Starting topic deletion for topics test-part-2-rep-5 (kafka.controller.KafkaController)
[2020-04-14 11:23:44,439] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-2-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:44,440] INFO [Topic Deletion Manager 0] Deletion of topic test-part-2-rep-5 (re)started (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:44,440] INFO [Topic Deletion Manager 0] Topic deletion callback for test-part-2-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:44,450] INFO [Topic Deletion Manager 0] Partition deletion callback for test-part-2-rep-5-1,test-part-2-rep-5-0 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:44,904] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=0,Replica=2],false),StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=1,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:23:44,904] DEBUG The stop replica request (delete = false) sent to broker 4 is StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=1,Replica=4],false),StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=0,Replica=4],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:23:44,904] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=0,Replica=1],false),StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=1,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:23:44,905] DEBUG The stop replica request (delete = false) sent to broker 3 is StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=0,Replica=3],false),StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=1,Replica=3],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:23:44,905] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=0,Replica=0],false),StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=1,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:23:44,905] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=test-part-2-rep-5,Partition=0,Replica=2],[Topic=test-part-2-rep-5,Partition=0,Replica=3],[Topic=test-part-2-rep-5,Partition=1,Replica=3],[Topic=test-part-2-rep-5,Partition=1,Replica=4],[Topic=test-part-2-rep-5,Partition=0,Replica=4],[Topic=test-part-2-rep-5,Partition=1,Replica=2],[Topic=test-part-2-rep-5,Partition=0,Replica=0],[Topic=test-part-2-rep-5,Partition=1,Replica=0],[Topic=test-part-2-rep-5,Partition=0,Replica=1],[Topic=test-part-2-rep-5,Partition=1,Replica=1] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:44,908] DEBUG The stop replica request (delete = true) sent to broker 2 is StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=0,Replica=2],true),StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=1,Replica=2],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:23:44,908] DEBUG The stop replica request (delete = true) sent to broker 4 is StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=1,Replica=4],true),StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=0,Replica=4],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:23:44,909] DEBUG The stop replica request (delete = true) sent to broker 1 is StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=0,Replica=1],true),StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=1,Replica=1],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:23:44,909] DEBUG The stop replica request (delete = true) sent to broker 3 is StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=0,Replica=3],true),StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=1,Replica=3],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:23:44,909] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=0,Replica=0],true),StopReplicaRequestInfo([Topic=test-part-2-rep-5,Partition=1,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-14 11:23:48,578] INFO [Controller id=0] New topics: [Set(test-part-5-rep-5)], deleted topics: [Set()], new partition replica assignment [Map(test-part-5-rep-5-2 -> Vector(3, 4, 0, 1, 2), test-part-5-rep-5-1 -> Vector(2, 3, 4, 0, 1), test-part-5-rep-5-0 -> Vector(1, 2, 3, 4, 0), test-part-5-rep-5-3 -> Vector(4, 0, 1, 2, 3), test-part-5-rep-5-4 -> Vector(0, 1, 2, 3, 4))] (kafka.controller.KafkaController)
[2020-04-14 11:23:48,578] INFO [Controller id=0] New partition creation callback for test-part-5-rep-5-2,test-part-5-rep-5-1,test-part-5-rep-5-0,test-part-5-rep-5-3,test-part-5-rep-5-4 (kafka.controller.KafkaController)
[2020-04-14 11:23:48,653] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(test-part-2-rep-5-1 -> NONE, test-part-2-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-14 11:23:48,654] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-2-rep-5,Partition=1,Replica=0],[Topic=test-part-2-rep-5,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:48,654] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-2-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:48,655] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(test-part-2-rep-5-1 -> NONE, test-part-2-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-14 11:23:48,656] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-2-rep-5,Partition=1,Replica=1],[Topic=test-part-2-rep-5,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:48,656] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-2-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:48,657] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = Map(test-part-2-rep-5-1 -> NONE, test-part-2-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-14 11:23:48,658] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-2-rep-5,Partition=1,Replica=4],[Topic=test-part-2-rep-5,Partition=0,Replica=4] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:48,658] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-2-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:48,659] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(test-part-2-rep-5-1 -> NONE, test-part-2-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-14 11:23:48,659] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-2-rep-5,Partition=1,Replica=2],[Topic=test-part-2-rep-5,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:48,660] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-2-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:48,661] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(test-part-2-rep-5-1 -> NONE, test-part-2-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-14 11:23:48,661] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-2-rep-5,Partition=1,Replica=3],[Topic=test-part-2-rep-5,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:48,662] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-2-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:48,724] INFO [Topic Deletion Manager 0] Deletion of topic test-part-2-rep-5 successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-14 11:23:48,725] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-14 11:23:48,726] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-04-14 11:23:54,795] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-14 11:23:54,795] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 11:23:54,796] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(test-part-5-rep-5-4 -> Vector(0, 1, 2, 3, 4)), 1 -> Map(test-part-5-rep-5-0 -> Vector(1, 2, 3, 4, 0)), 2 -> Map(test-part-5-rep-5-1 -> Vector(2, 3, 4, 0, 1)), 3 -> Map(test-part-5-rep-5-2 -> Vector(3, 4, 0, 1, 2)), 4 -> Map(test-part-5-rep-5-3 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-14 11:23:54,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 11:23:54,797] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:23:54,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-14 11:23:54,797] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:23:54,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-14 11:23:54,797] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:23:54,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-04-14 11:23:54,797] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:23:54,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-14 11:23:54,797] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:24:40,280] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-5-rep-5-0, test-part-5-rep-5-1) (kafka.controller.KafkaController)
[2020-04-14 11:24:40,427] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-5-rep-5-3) (kafka.controller.KafkaController)
[2020-04-14 11:24:42,241] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-5-rep-5-4) (kafka.controller.KafkaController)
[2020-04-14 11:24:42,684] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-5-rep-5-2) (kafka.controller.KafkaController)
[2020-04-14 11:28:54,797] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-14 11:28:54,798] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 11:28:54,799] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(test-part-5-rep-5-4 -> Vector(0, 1, 2, 3, 4)), 1 -> Map(test-part-5-rep-5-0 -> Vector(1, 2, 3, 4, 0)), 2 -> Map(test-part-5-rep-5-1 -> Vector(2, 3, 4, 0, 1)), 3 -> Map(test-part-5-rep-5-2 -> Vector(3, 4, 0, 1, 2)), 4 -> Map(test-part-5-rep-5-3 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-14 11:28:54,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 11:28:54,800] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:28:54,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-14 11:28:54,800] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:28:54,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-14 11:28:54,800] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:28:54,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-04-14 11:28:54,800] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:28:54,800] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-14 11:28:54,800] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:33:54,801] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-14 11:33:54,802] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 11:33:54,803] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(test-part-5-rep-5-4 -> Vector(0, 1, 2, 3, 4)), 1 -> Map(test-part-5-rep-5-0 -> Vector(1, 2, 3, 4, 0)), 2 -> Map(test-part-5-rep-5-1 -> Vector(2, 3, 4, 0, 1)), 3 -> Map(test-part-5-rep-5-2 -> Vector(3, 4, 0, 1, 2)), 4 -> Map(test-part-5-rep-5-3 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-14 11:33:54,803] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 11:33:54,803] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:33:54,803] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-14 11:33:54,803] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:33:54,803] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-14 11:33:54,803] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:33:54,803] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-04-14 11:33:54,803] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:33:54,803] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-14 11:33:54,803] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:38:54,804] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-14 11:38:54,804] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 11:38:54,806] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(test-part-5-rep-5-4 -> Vector(0, 1, 2, 3, 4)), 1 -> Map(test-part-5-rep-5-0 -> Vector(1, 2, 3, 4, 0)), 2 -> Map(test-part-5-rep-5-1 -> Vector(2, 3, 4, 0, 1)), 3 -> Map(test-part-5-rep-5-2 -> Vector(3, 4, 0, 1, 2)), 4 -> Map(test-part-5-rep-5-3 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-14 11:38:54,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 11:38:54,806] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:38:54,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-14 11:38:54,806] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:38:54,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-14 11:38:54,806] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:38:54,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-04-14 11:38:54,806] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:38:54,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-14 11:38:54,806] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:43:54,807] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-14 11:43:54,808] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 11:43:54,810] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(test-part-5-rep-5-4 -> Vector(0, 1, 2, 3, 4)), 1 -> Map(test-part-5-rep-5-0 -> Vector(1, 2, 3, 4, 0)), 2 -> Map(test-part-5-rep-5-1 -> Vector(2, 3, 4, 0, 1)), 3 -> Map(test-part-5-rep-5-2 -> Vector(3, 4, 0, 1, 2)), 4 -> Map(test-part-5-rep-5-3 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-14 11:43:54,810] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 11:43:54,810] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:43:54,810] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-14 11:43:54,810] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:43:54,810] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-14 11:43:54,810] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:43:54,810] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-04-14 11:43:54,810] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:43:54,810] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-14 11:43:54,810] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:46:57,227] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-5-rep-5-4) (kafka.controller.KafkaController)
[2020-04-14 11:46:57,235] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 11:46:57,235] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 11:46:57,235] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9090 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 11:46:57,237] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9094 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 11:46:57,237] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-14 11:47:20,785] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-5-rep-5-2, test-part-5-rep-5-2) (kafka.controller.KafkaController)
[2020-04-14 11:47:36,427] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-5-rep-5-1, test-part-5-rep-5-0) (kafka.controller.KafkaController)
[2020-04-14 11:47:38,007] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-5-rep-5-3) (kafka.controller.KafkaController)
[2020-04-14 11:47:42,309] DEBUG [Controller id=0] Sending MetadataRequest to Brokers: Vector(0, 1, 2, 3, 4) for TopicPartitions: ArrayBuffer(test-part-5-rep-5-1) (kafka.controller.KafkaController)
[2020-04-14 11:48:54,811] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-14 11:48:54,811] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 11:48:54,812] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(test-part-5-rep-5-4 -> Vector(0, 1, 2, 3, 4)), 1 -> Map(test-part-5-rep-5-0 -> Vector(1, 2, 3, 4, 0)), 2 -> Map(test-part-5-rep-5-1 -> Vector(2, 3, 4, 0, 1)), 3 -> Map(test-part-5-rep-5-2 -> Vector(3, 4, 0, 1, 2)), 4 -> Map(test-part-5-rep-5-3 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-14 11:48:54,812] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 11:48:54,812] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:48:54,812] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-14 11:48:54,812] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:48:54,812] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-14 11:48:54,812] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:48:54,813] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-04-14 11:48:54,813] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:48:54,813] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-14 11:48:54,813] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:53:54,813] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-14 11:53:54,813] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-14 11:53:54,815] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(test-part-5-rep-5-4 -> Vector(0, 1, 2, 3, 4)), 1 -> Map(test-part-5-rep-5-0 -> Vector(1, 2, 3, 4, 0)), 2 -> Map(test-part-5-rep-5-1 -> Vector(2, 3, 4, 0, 1)), 3 -> Map(test-part-5-rep-5-2 -> Vector(3, 4, 0, 1, 2)), 4 -> Map(test-part-5-rep-5-3 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-14 11:53:54,815] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-14 11:53:54,815] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:53:54,815] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2020-04-14 11:53:54,815] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:53:54,815] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-04-14 11:53:54,816] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:53:54,816] DEBUG [Controller id=0] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2020-04-14 11:53:54,816] TRACE [Controller id=0] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2020-04-14 11:53:54,816] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-14 11:53:54,816] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
