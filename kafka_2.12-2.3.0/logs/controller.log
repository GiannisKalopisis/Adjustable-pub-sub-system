[2020-04-22 17:03:08,652] INFO [Controller id=0] Shutting down broker 1 (kafka.controller.KafkaController)
[2020-04-22 17:03:08,653] DEBUG [Controller id=0] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2020-04-22 17:03:08,653] DEBUG [Controller id=0] Live brokers: 0 (kafka.controller.KafkaController)
[2020-04-22 17:31:32,022] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-22 17:31:33,688] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-22 17:31:33,723] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-04-22 17:31:33,724] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-22 17:31:33,727] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-22 17:31:33,731] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-22 17:31:33,733] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-22 17:31:33,759] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2020-04-22 17:31:33,763] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-22 17:31:33,768] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-22 17:31:33,774] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-22 17:31:33,777] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-04-22 17:31:33,778] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-22 17:31:33,778] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-22 17:31:33,778] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-22 17:31:33,778] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-22 17:31:33,781] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-22 17:31:33,781] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-22 17:31:33,782] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-22 17:31:33,782] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-04-22 17:31:33,782] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-22 17:31:33,793] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-04-22 17:31:33,794] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-22 17:31:33,798] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-04-22 17:31:33,798] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-04-22 17:31:33,799] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-04-22 17:31:33,799] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-04-22 17:31:33,802] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-04-22 17:31:33,802] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-22 17:31:33,803] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9090 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-22 17:31:33,804] INFO [Controller id=0] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2020-04-22 17:31:33,804] INFO [Controller id=0] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2020-04-22 17:31:33,808] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-22 17:31:33,808] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-22 17:31:33,808] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-22 17:31:33,809] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-22 17:31:33,809] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-04-22 17:31:33,820] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-22 17:31:34,570] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-04-22 17:31:34,570] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-04-22 17:31:34,575] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-22 17:31:34,577] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-04-22 17:31:34,579] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-22 17:31:34,581] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-04-22 17:31:34,582] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43) (kafka.controller.KafkaController)
[2020-04-22 17:31:34,619] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-22 17:31:34,628] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-22 17:31:35,616] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-04-22 17:31:35,616] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-04-22 17:31:35,619] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-22 17:31:35,619] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-04-22 17:31:35,620] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-04-22 17:31:35,620] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-22 17:31:35,623] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43, 2 -> 60) (kafka.controller.KafkaController)
[2020-04-22 17:31:35,671] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-22 17:31:35,683] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-22 17:31:36,355] INFO [Controller id=0] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3 (kafka.controller.KafkaController)
[2020-04-22 17:31:36,355] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2020-04-22 17:31:36,359] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-22 17:31:36,359] INFO [Controller id=0] New broker startup callback for 3 (kafka.controller.KafkaController)
[2020-04-22 17:31:36,360] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(3) (kafka.controller.KafkaController)
[2020-04-22 17:31:36,360] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-22 17:31:36,362] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43, 2 -> 60, 3 -> 75) (kafka.controller.KafkaController)
[2020-04-22 17:31:36,400] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-22 17:31:36,411] DEBUG [Controller id=3] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-22 17:31:37,183] INFO [Controller id=0] Newly added brokers: 4, deleted brokers: , bounced brokers: , all live brokers: 0,1,2,3,4 (kafka.controller.KafkaController)
[2020-04-22 17:31:37,183] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 4 (kafka.controller.ControllerChannelManager)
[2020-04-22 17:31:37,185] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-22 17:31:37,185] INFO [Controller id=0] New broker startup callback for 4 (kafka.controller.KafkaController)
[2020-04-22 17:31:37,186] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(4) (kafka.controller.KafkaController)
[2020-04-22 17:31:37,186] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9094 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-22 17:31:37,190] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 43, 2 -> 60, 3 -> 75, 4 -> 91) (kafka.controller.KafkaController)
[2020-04-22 17:31:37,215] INFO [ControllerEventThread controllerId=4] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-22 17:31:37,224] DEBUG [Controller id=4] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-04-22 17:31:38,822] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-22 17:31:38,823] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-22 17:31:38,826] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-22 17:32:05,365] INFO [Controller id=0] New topics: [Set(test-part-1-rep-5)], deleted topics: [Set()], new partition replica assignment [Map(test-part-1-rep-5-0 -> Vector(4, 0, 1, 2, 3))] (kafka.controller.KafkaController)
[2020-04-22 17:32:05,365] INFO [Controller id=0] New partition creation callback for test-part-1-rep-5-0 (kafka.controller.KafkaController)
[2020-04-22 17:36:38,827] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-22 17:36:38,827] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-22 17:36:38,828] DEBUG [Controller id=0] Preferred replicas by broker Map(4 -> Map(test-part-1-rep-5-0 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-22 17:36:38,831] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-22 17:36:38,840] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-22 17:41:38,841] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-22 17:41:38,841] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-22 17:41:38,841] DEBUG [Controller id=0] Preferred replicas by broker Map(4 -> Map(test-part-1-rep-5-0 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-22 17:41:38,841] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-22 17:41:38,842] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-22 17:46:38,842] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-22 17:46:38,843] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-22 17:46:38,843] DEBUG [Controller id=0] Preferred replicas by broker Map(4 -> Map(test-part-1-rep-5-0 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-22 17:46:38,843] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-22 17:46:38,843] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-22 17:51:38,843] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-22 17:51:38,844] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-22 17:51:38,845] DEBUG [Controller id=0] Preferred replicas by broker Map(4 -> Map(test-part-1-rep-5-0 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-22 17:51:38,845] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-22 17:51:38,845] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-22 17:56:38,845] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-04-22 17:56:38,846] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-22 17:56:38,847] DEBUG [Controller id=0] Preferred replicas by broker Map(4 -> Map(test-part-1-rep-5-0 -> Vector(4, 0, 1, 2, 3))) (kafka.controller.KafkaController)
[2020-04-22 17:56:38,847] DEBUG [Controller id=0] Topics not in preferred replica for broker 4 Map() (kafka.controller.KafkaController)
[2020-04-22 17:56:38,847] TRACE [Controller id=0] Leader imbalance ratio for broker 4 is 0.0 (kafka.controller.KafkaController)
[2020-04-22 17:57:12,659] DEBUG [Controller id=0] Delete topics listener fired for topics test-part-1-rep-5 to be deleted (kafka.controller.KafkaController)
[2020-04-22 17:57:12,660] INFO [Controller id=0] Starting topic deletion for topics test-part-1-rep-5 (kafka.controller.KafkaController)
[2020-04-22 17:57:12,662] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:12,667] INFO [Topic Deletion Manager 0] Deletion of topic test-part-1-rep-5 (re)started (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:12,668] INFO [Topic Deletion Manager 0] Topic deletion callback for test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:12,681] INFO [Topic Deletion Manager 0] Partition deletion callback for test-part-1-rep-5-0 (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:12,684] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9090 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-22 17:57:12,684] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-22 17:57:12,684] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-22 17:57:12,686] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-22 17:57:12,684] INFO [RequestSendThread controllerId=0] Controller 0 connected to 195.134.67.93:9094 (id: 4 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-22 17:57:13,221] DEBUG The stop replica request (delete = false) sent to broker 2 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=2],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-22 17:57:13,222] DEBUG The stop replica request (delete = false) sent to broker 4 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=4],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-22 17:57:13,223] DEBUG The stop replica request (delete = false) sent to broker 1 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=1],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-22 17:57:13,223] DEBUG The stop replica request (delete = false) sent to broker 3 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=3],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-22 17:57:13,224] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-22 17:57:13,225] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=0],[Topic=test-part-1-rep-5,Partition=0,Replica=3],[Topic=test-part-1-rep-5,Partition=0,Replica=1],[Topic=test-part-1-rep-5,Partition=0,Replica=4],[Topic=test-part-1-rep-5,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:13,237] DEBUG The stop replica request (delete = true) sent to broker 2 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=2],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-22 17:57:13,239] DEBUG The stop replica request (delete = true) sent to broker 4 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=4],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-22 17:57:13,240] DEBUG The stop replica request (delete = true) sent to broker 1 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=1],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-22 17:57:13,240] DEBUG The stop replica request (delete = true) sent to broker 3 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=3],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-22 17:57:13,240] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=test-part-1-rep-5,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-04-22 17:57:15,468] INFO [Controller id=0] New topics: [Set(test-part-2-rep-5)], deleted topics: [Set()], new partition replica assignment [Map(test-part-2-rep-5-1 -> Vector(3, 2, 4, 0, 1), test-part-2-rep-5-0 -> Vector(2, 1, 3, 4, 0))] (kafka.controller.KafkaController)
[2020-04-22 17:57:15,468] INFO [Controller id=0] New partition creation callback for test-part-2-rep-5-1,test-part-2-rep-5-0 (kafka.controller.KafkaController)
[2020-04-22 17:57:21,283] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 4: request error = NONE, partition errors = Map(test-part-1-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-22 17:57:21,286] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=4] (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:21,287] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:21,288] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 3: request error = NONE, partition errors = Map(test-part-1-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-22 17:57:21,288] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=3] (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:21,288] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:21,290] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = Map(test-part-1-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-22 17:57:21,290] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=2] (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:21,291] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:21,292] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = Map(test-part-1-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-22 17:57:21,292] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=1] (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:21,292] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:21,293] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(test-part-1-rep-5-0 -> NONE) (kafka.controller.KafkaController)
[2020-04-22 17:57:21,293] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test-part-1-rep-5,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:21,293] INFO [Topic Deletion Manager 0] Handling deletion for topics test-part-1-rep-5 (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:24,072] INFO [Topic Deletion Manager 0] Deletion of topic test-part-1-rep-5 successfully completed (kafka.controller.TopicDeletionManager)
[2020-04-22 17:57:24,075] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-04-22 17:57:24,077] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
