[2020-02-05 17:03:46,460] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:03:46,461] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:03:46,461] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-05 17:08:46,462] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:08:46,462] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:08:46,462] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-05 17:13:46,463] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:13:46,463] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:13:46,463] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-05 17:18:46,465] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:18:46,465] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:18:46,465] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-05 17:23:46,466] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:23:46,466] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:23:46,467] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-05 17:28:46,467] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:28:46,469] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:28:46,469] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-05 17:33:46,470] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:33:46,470] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:33:46,471] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-05 17:38:46,472] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:38:46,472] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:38:46,472] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-05 17:43:46,473] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:43:46,473] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:43:46,473] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-05 17:48:46,474] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:48:46,474] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:48:46,474] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-05 17:53:46,479] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:53:46,485] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:53:46,487] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-02-05 17:54:41,101] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2020-02-05 17:54:41,102] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2020-02-05 17:54:41,102] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2020-02-05 17:54:41,109] TRACE [Controller id=0] All leaders =  (kafka.controller.KafkaController)
[2020-02-05 17:54:42,293] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-05 17:54:42,297] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-05 17:54:42,297] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-05 17:54:42,297] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2020-02-05 17:54:42,298] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-05 17:54:42,300] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2020-02-05 17:54:42,301] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2020-02-05 17:54:42,301] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-02-05 17:54:42,302] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-02-05 17:54:42,302] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-02-05 17:54:42,307] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2020-02-05 17:54:51,634] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@38cccef, name=log4j:logger=kafka.controller (kafka.controller)
[2020-02-05 17:54:59,049] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-02-05 17:54:59,081] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-02-05 17:54:59,082] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-02-05 17:54:59,089] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-02-05 17:54:59,095] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-02-05 17:54:59,099] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-02-05 17:54:59,124] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 44) (kafka.controller.KafkaController)
[2020-02-05 17:54:59,130] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-02-05 17:54:59,138] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-02-05 17:54:59,162] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-02-05 17:54:59,165] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-02-05 17:54:59,166] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-02-05 17:54:59,166] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-05 17:54:59,167] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-02-05 17:54:59,167] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-02-05 17:54:59,180] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-02-05 17:54:59,181] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-02-05 17:54:59,182] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-02-05 17:54:59,183] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-02-05 17:54:59,184] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-02-05 17:54:59,199] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-02-05 17:54:59,201] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-05 17:54:59,209] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-02-05 17:54:59,210] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-02-05 17:54:59,211] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-02-05 17:54:59,212] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-02-05 17:54:59,212] INFO [RequestSendThread controllerId=0] Controller 0 connected to gianniskalopisis-pc:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-02-05 17:54:59,216] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-02-05 17:54:59,217] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-02-05 17:54:59,218] INFO [Controller id=0] Removing partitions Set() from the list of reassigned partitions in zookeeper (kafka.controller.KafkaController)
[2020-02-05 17:54:59,219] INFO [Controller id=0] No more partitions need to be reassigned. Deleting zk path /admin/reassign_partitions (kafka.controller.KafkaController)
[2020-02-05 17:54:59,226] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-02-05 17:54:59,228] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-02-05 17:54:59,228] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-02-05 17:54:59,229] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-02-05 17:54:59,230] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-02-05 17:54:59,250] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-02-05 17:55:04,252] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-02-05 17:55:04,253] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-02-05 17:55:04,256] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
